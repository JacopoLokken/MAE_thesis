c("oob_all", "oob_missing", "oob_complete", "oob_male", "oob_female")
),
timevar = "metric",
times = c("Overall", "Missing", "Complete", "Male", "Female"),
v.names = "RMSE",
idvar = c("misP", "hand")
)
# Reshape Bias data into long format
bias_long <- reshape(
aggregate_bias,
direction = "long",
varying = list(
c("oob_all", "oob_missing", "oob_complete", "oob_male", "oob_female")
),
timevar = "metric",
times = c("Overall", "Missing", "Complete", "Male", "Female"),
v.names = "Bias",
idvar = c("misP", "hand")
)
# Merge RMSE and Bias data
combined_long <- merge(rmse_long, bias_long, by = c("misP", "hand", "metric"))
# Convert metric to factor with specified order
combined_long$metric <- factor(combined_long$metric,
levels = c("Overall", "Missing", "Complete", "Female", "Male"))
# Plot RMSE
rmse_plot <- ggplot(combined_long, aes(x = factor(misP), y = RMSE, group = hand, color = hand)) +
geom_line(linewidth = 1) +
geom_point(size = 3) +
facet_wrap(~metric, nrow = 1) +
scale_x_discrete(labels = c("20%", "50%", "80%")) +
scale_color_manual(
name = "Handling Method",
values = c("omit" = "#E69F00", "roughfix" = "#56B4E9", "rfimpute" = "#009E73"),
labels = c("Listwise Deletion", "Single Imputation", "Proximity Imputation")
) +
labs(x = "Proportion of Missing Values", y = "RMSE") +
theme_minimal() +
theme(legend.position = "bottom")
# Plot Bias
bias_plot <- ggplot(combined_long, aes(x = factor(misP), y = Bias, group = hand, color = hand)) +
geom_line(linewidth = 1) +
geom_point(size = 3) +
facet_wrap(~metric, nrow = 1) +
scale_x_discrete(labels = c("20%", "50%", "80%")) +
scale_color_manual(
name = "Handling Method",
values = c("omit" = "#E69F00", "roughfix" = "#56B4E9", "rfimpute" = "#009E73"),
labels = c("Listwise Deletion", "Single Imputation", "Proximity Imputation")
) +
labs(x = "Proportion of Missing Values", y = "Bias") +
theme_minimal() +
theme(legend.position = "bottom")
print(bias_plot)
print(rmse_plot)
# Save plots
ggsave("viz/rmse_plot.png", rmse_plot, width = 12, height = 6)
ggsave("viz/bias_plot.png", bias_plot, width = 12, height = 6)
####
#### Plot Mean Decrease Gini for variable importance
###
# Reshape Gini data into long format
gini_long <- reshape(
results,
direction = "long",
varying = grep("^gini_", names(results), value = TRUE),
timevar = "variable",
times = gsub("gini_", "", grep("^gini_", names(results), value = TRUE)),
v.names = "importance",
idvar = c("misP", "hand", "rep")
)
gini_strip <- ggplot(gini_long, aes(x = importance, y = variable)) +
geom_jitter(alpha = 0.1, height = 0.2, size = 0.5) +
facet_grid(hand ~ misP) +  # No custom labeller
labs(x = "Mean Decrease Gini",
y = "Variable") +
theme_minimal()
# Print and save
print(gini_strip)
ggsave("viz/gini_importance_distribution.png", gini_strip, width = 12, height = 8)
####
#### Plot Mean Decrease Gini for variable importance (REVISED)
####
# Get baseline variable importance order
baseline_imp <- readRDS("data/var_imp_baseline.rds")
variable_order <- baseline_imp$Variable[order(baseline_imp$Rank)]
# Order variables by baseline importance
gini_long$variable <- factor(gini_long$variable, levels = variable_order)
# Plot
gini_strip <- ggplot(gini_long, aes(x = importance, y = variable, color = hand)) +
geom_jitter(alpha = 0.2, height = 0.2, size = 1.5) +
facet_wrap(~misP, nrow = 1,
labeller = labeller(misP = c("0.2" = "20%", "0.5" = "50%", "0.8" = "80%"))) +
scale_color_manual(
name = "Handling Method",
values = c("omit" = "#E69F00", "roughfix" = "#56B4E9", "rfimpute" = "#009E73"),
labels = c("Listwise Deletion", "Single Imputation", "Proximity Imputation")
) +
labs(
x = "Mean Decrease Gini",
y = "Variable"
) +
theme_minimal() +
theme(
legend.position = "bottom",
strip.background = element_rect(fill = "gray90", color = NA),
strip.text = element_text(face = "bold"),
panel.spacing = unit(1.5, "lines")
)
print(gini_strip)
Plot with consistent coloring by 'hand' and faceting by 'case_type'
ggplot(long_data1, aes(x = factor(misP), y = oob_mean, group = hand)) +
geom_hline(yintercept = upper_bound, linetype = "dashed", color = "darkgray", linewidth = 0.6) +
geom_hline(yintercept = lower_bound, linetype = "dashed", color = "darkgray", linewidth = 0.6) +
geom_line(aes(color = hand), linewidth = 1) +
geom_point(aes(color = hand), size = 2.5) +
geom_errorbar(aes(ymin = oob_mean - oob_sd, ymax = oob_mean + oob_sd, color = hand), width = 0.1, linewidth = 0.6) +
facet_wrap(~case_type) + # Facet by case type instead of hand
scale_x_discrete(labels = c("20%", "50%", "80%")) +
scale_color_manual(
name = "Handling Method",
values = c("omit" = "#E69F00", "roughfix" = "#56B4E9", "rfimpute" = "#009E73"),
labels = c("Listwise Deletion", "Single Imputation", "Proximity Imputation")
) +
labs(x = "Proportion of Missing Values", y = "OOB Error Rate") +
theme_minimal() +
theme(
legend.position = "bottom",
strip.background = element_rect(fill = "gray90", color = NA),
strip.text = element_text(face = "bold")
)
# Plot with consistent coloring by 'hand' and faceting by 'gender'
ggplot(long_data_gender, aes(x = factor(misP), y = oob_mean, group = hand)) +
geom_hline(yintercept = upper_bound, linetype = "dashed", color = "darkgray", linewidth = 0.6) +
geom_hline(yintercept = lower_bound, linetype = "dashed", color = "darkgray", linewidth = 0.6) +
geom_line(aes(color = hand), linewidth = 1) +
geom_point(aes(color = hand), size = 2.5) +
geom_errorbar(aes(ymin = oob_mean - oob_sd, ymax = oob_mean + oob_sd, color = hand), width = 0.1, linewidth = 0.6) +
facet_wrap(~gender) + # Facet by gender instead of hand
scale_x_discrete(labels = c("20%", "50%", "80%")) +
scale_color_manual(
name = "Handling Method",
values = c("omit" = "#E69F00", "roughfix" = "#56B4E9", "rfimpute" = "#009E73"),
labels = c("Listwise Deletion", "Single Imputation", "Proximity Imputation")
) +
labs(x = "Proportion of Missing Values", y = "OOB Error Rate") +
theme_minimal() +
theme(
legend.position = "bottom",
strip.background = element_rect(fill = "gray90", color = NA),
strip.text = element_text(face = "bold")
)
library(ggplot2)
setwd("C:\\Users\\jacop\\OneDrive\\Desktop\\Thesis\\Code_Thesis")
aggregated_data <- readRDS("results_analysis/aggregated_results.rds")
aggregate_results <- aggregated_data$aggregate_results
aggregate_sd <- aggregated_data$aggregate_sd
reference_results <- readRDS("data/reference_results.rds")
aggregate_rmse <- aggregated_data$aggregate_rmse
aggregate_bias <- aggregated_data$aggregate_bias
results <-readRDS("running_experiment/simulation_results1.rds")
# Prepare data
plot_data <- merge(
aggregate_results,
aggregate_sd,
by = c("misP", "hand"),
suffixes = c("_mean", "_sd")
)
plot_data <- plot_data[, c("misP", "hand", "oob_all_mean", "oob_all_sd")]
upper_bound <- reference_results$Overall_OOB[1]  # Baseline model (0.194)
lower_bound <- reference_results$Overall_OOB[2]  # Lower bound model (0.289)
# Plot
ggplot(plot_data, aes(x = factor(misP), group = hand)) +
geom_hline(yintercept = upper_bound, linetype = "dashed",
color = "darkgray", linewidth = 0.8) +
annotate("text", x = Inf, y = upper_bound + 0.003,
label = "Baseline model", color = "#666666", size = 3.5,
hjust = 1.1, vjust = -0.5) +
geom_hline(yintercept = lower_bound, linetype = "dashed",
color = "darkgray", linewidth = 0.8) +
annotate("text", x = Inf, y = lower_bound - 0.003,
label = "Lower bound model", color = "#666666", size = 3.5,
hjust = 1.1, vjust = 1.5) +
geom_line(aes(y = oob_all_mean, color = hand, group = hand),
linewidth = 1) +
geom_point(aes(y = oob_all_mean, color = hand), size = 3) +
geom_errorbar(aes(ymin = oob_all_mean - oob_all_sd,
ymax = oob_all_mean + oob_all_sd,
color = hand),
width = 0.1, linewidth = 0.8) +
scale_x_discrete(labels = c("20%", "50%", "80%")) +
scale_color_manual(
name = "Handling Method",
values = c("omit" = "#E69F00", "roughfix" = "#56B4E9", "rfimpute" = "#009E73"),
labels = c("Listwise Deletion", "Single Imputation", "Proximity Imputation")
) +
labs(
x = "Proportion of Missing Values",
y = "Overall OOB Error Rate"
) +
theme_minimal() +
theme(
legend.position = "bottom",
panel.grid.major.x = element_blank(),
axis.text.x = element_text(size = 12),
axis.title = element_text(size = 14)
)
# Prepare data
plot_data1 <- merge(
aggregated_data$aggregate_results,
aggregated_data$aggregate_sd,
by = c("misP", "hand"),
suffixes = c("_mean", "_sd")
)
long_data1 <- reshape(
plot_data1,
direction = "long",
varying = list(
c("oob_missing_mean", "oob_complete_mean"),
c("oob_missing_sd", "oob_complete_sd")
),
timevar = "case_type",
times = c("Missing", "Complete"),
v.names = c("oob_mean", "oob_sd"),
idvar = c("misP", "hand")
)
Plot with consistent coloring by 'hand' and faceting by 'case_type'
ggplot(long_data1, aes(x = factor(misP), y = oob_mean, group = hand)) +
geom_hline(yintercept = upper_bound, linetype = "dashed", color = "darkgray", linewidth = 0.6) +
geom_hline(yintercept = lower_bound, linetype = "dashed", color = "darkgray", linewidth = 0.6) +
geom_line(aes(color = hand), linewidth = 1) +
geom_point(aes(color = hand), size = 2.5) +
geom_errorbar(aes(ymin = oob_mean - oob_sd, ymax = oob_mean + oob_sd, color = hand), width = 0.1, linewidth = 0.6) +
facet_wrap(~case_type) + # Facet by case type instead of hand
scale_x_discrete(labels = c("20%", "50%", "80%")) +
scale_color_manual(
name = "Handling Method",
values = c("omit" = "#E69F00", "roughfix" = "#56B4E9", "rfimpute" = "#009E73"),
labels = c("Listwise Deletion", "Single Imputation", "Proximity Imputation")
) +
labs(x = "Proportion of Missing Values", y = "OOB Error Rate") +
theme_minimal() +
theme(
legend.position = "bottom",
strip.background = element_rect(fill = "gray90", color = NA),
strip.text = element_text(face = "bold")
)
plot_data_gender <- merge(
aggregated_data$aggregate_results,
aggregated_data$aggregate_sd,
by = c("misP", "hand"),
suffixes = c("_mean", "_sd")
)
long_data_gender <- reshape(
plot_data_gender,
direction = "long",
varying = list(
c("oob_male_mean", "oob_female_mean"),
c("oob_male_sd", "oob_female_sd")
),
timevar = "gender",
times = c("Male", "Female"),
v.names = c("oob_mean", "oob_sd"),
idvar = c("misP", "hand")
)
# Plot
ggplot(long_data_gender, aes(x = factor(misP), y = oob_mean, group = hand)) +
geom_hline(yintercept = upper_bound, linetype = "dashed", color = "darkgray", linewidth = 0.6) +
geom_hline(yintercept = lower_bound, linetype = "dashed", color = "darkgray", linewidth = 0.6) +
geom_line(aes(color = hand), linewidth = 1) +
geom_point(aes(color = hand), size = 2.5) +
geom_errorbar(aes(ymin = oob_mean - oob_sd, ymax = oob_mean + oob_sd, color = hand), width = 0.1, linewidth = 0.6) +
facet_wrap(~gender) + # Facet by gender instead of hand
scale_x_discrete(labels = c("20%", "50%", "80%")) +
scale_color_manual(
name = "Handling Method",
values = c("omit" = "#E69F00", "roughfix" = "#56B4E9", "rfimpute" = "#009E73"),
labels = c("Listwise Deletion", "Single Imputation", "Proximity Imputation")
) +
labs(x = "Proportion of Missing Values", y = "OOB Error Rate") +
theme_minimal() +
theme(
legend.position = "bottom",
strip.background = element_rect(fill = "gray90", color = NA),
strip.text = element_text(face = "bold")
)
####
#### Plot RMSE and Bias ####
####
# Reshape RMSE data into long format
rmse_long <- reshape(
aggregate_rmse,
direction = "long",
varying = list(
c("oob_all", "oob_missing", "oob_complete", "oob_male", "oob_female")
),
timevar = "metric",
times = c("Overall", "Missing", "Complete", "Male", "Female"),
v.names = "RMSE",
idvar = c("misP", "hand")
)
# Reshape Bias data into long format
bias_long <- reshape(
aggregate_bias,
direction = "long",
varying = list(
c("oob_all", "oob_missing", "oob_complete", "oob_male", "oob_female")
),
timevar = "metric",
times = c("Overall", "Missing", "Complete", "Male", "Female"),
v.names = "Bias",
idvar = c("misP", "hand")
)
# Merge RMSE and Bias data
combined_long <- merge(rmse_long, bias_long, by = c("misP", "hand", "metric"))
# Convert metric to factor with specified order
combined_long$metric <- factor(combined_long$metric,
levels = c("Overall", "Missing", "Complete", "Female", "Male"))
# Plot RMSE
rmse_plot <- ggplot(combined_long, aes(x = factor(misP), y = RMSE, group = hand, color = hand)) +
geom_line(linewidth = 1) +
geom_point(size = 3) +
facet_wrap(~metric, nrow = 1) +
scale_x_discrete(labels = c("20%", "50%", "80%")) +
scale_color_manual(
name = "Handling Method",
values = c("omit" = "#E69F00", "roughfix" = "#56B4E9", "rfimpute" = "#009E73"),
labels = c("Listwise Deletion", "Single Imputation", "Proximity Imputation")
) +
labs(x = "Proportion of Missing Values", y = "RMSE") +
theme_minimal() +
theme(legend.position = "bottom")
# Plot Bias
bias_plot <- ggplot(combined_long, aes(x = factor(misP), y = Bias, group = hand, color = hand)) +
geom_line(linewidth = 1) +
geom_point(size = 3) +
facet_wrap(~metric, nrow = 1) +
scale_x_discrete(labels = c("20%", "50%", "80%")) +
scale_color_manual(
name = "Handling Method",
values = c("omit" = "#E69F00", "roughfix" = "#56B4E9", "rfimpute" = "#009E73"),
labels = c("Listwise Deletion", "Single Imputation", "Proximity Imputation")
) +
labs(x = "Proportion of Missing Values", y = "Bias") +
theme_minimal() +
theme(legend.position = "bottom")
print(bias_plot)
print(rmse_plot)
# Get baseline variable importance order
baseline_imp <- readRDS("data/var_imp_baseline.rds")
variable_order <- baseline_imp$Variable[order(baseline_imp$Rank)]
# Order variables by baseline importance
gini_long$variable <- factor(gini_long$variable, levels = variable_order)
# Reshape Gini data into long format
gini_long <- reshape(
results,
direction = "long",
varying = grep("^gini_", names(results), value = TRUE),
timevar = "variable",
times = gsub("gini_", "", grep("^gini_", names(results), value = TRUE)),
v.names = "importance",
idvar = c("misP", "hand", "rep")
)
# Get baseline variable importance order
baseline_imp <- readRDS("data/var_imp_baseline.rds")
variable_order <- baseline_imp$Variable[order(baseline_imp$Rank)]
# Order variables by baseline importance
gini_long$variable <- factor(gini_long$variable, levels = variable_order)
# Plot
gini_strip <- ggplot(gini_long, aes(x = importance, y = variable, color = hand)) +
geom_jitter(alpha = 0.2, height = 0.2, size = 1.5) +
facet_wrap(~misP, nrow = 1,
labeller = labeller(misP = c("0.2" = "20%", "0.5" = "50%", "0.8" = "80%"))) +
scale_color_manual(
name = "Handling Method",
values = c("omit" = "#E69F00", "roughfix" = "#56B4E9", "rfimpute" = "#009E73"),
labels = c("Listwise Deletion", "Single Imputation", "Proximity Imputation")
) +
labs(
x = "Mean Decrease Gini",
y = "Variable"
) +
theme_minimal() +
theme(
legend.position = "bottom",
strip.background = element_rect(fill = "gray90", color = NA),
strip.text = element_text(face = "bold"),
panel.spacing = unit(1.5, "lines")
)
print(gini_strip)
baseline_imp <- readRDS("data/var_imp_baseline.rds")
variable_order <- baseline_imp$Variable[order(baseline_imp$Rank), decreasing = T]
variable_order <- baseline_imp$Variable[order(baseline_imp$Rank), decreasing = TRUE]
variable_order <- baseline_imp$Variable[order(baseline_imp$Rank, decreasing = T)]
# Order variables by baseline importance
gini_long$variable <- factor(gini_long$variable, levels = variable_order)
# Plot
gini_strip <- ggplot(gini_long, aes(x = importance, y = variable, color = hand)) +
geom_jitter(alpha = 0.2, height = 0.2, size = 1.5) +
facet_wrap(~misP, nrow = 1,
labeller = labeller(misP = c("0.2" = "20%", "0.5" = "50%", "0.8" = "80%"))) +
scale_color_manual(
name = "Handling Method",
values = c("omit" = "#E69F00", "roughfix" = "#56B4E9", "rfimpute" = "#009E73"),
labels = c("Listwise Deletion", "Single Imputation", "Proximity Imputation")
) +
labs(
x = "Mean Decrease Gini",
y = "Variable"
) +
theme_minimal() +
theme(
legend.position = "bottom",
strip.background = element_rect(fill = "gray90", color = NA),
strip.text = element_text(face = "bold"),
panel.spacing = unit(1.5, "lines")
)
print(gini_strip)
setwd("C:\\Users\\jacop\\OneDrive\\Desktop\\Thesis\\Code_Thesis")
# Loading simulation results
results <-readRDS("running_experiment/simulation_results1.rds")
# Loading true data results results to print them later next to simulation results
reference_results <-readRDS("data/reference_results.rds")
rf_baseline <-readRDS("data/rf_baseline_model.rds")
rf_lower <- readRDS("data/rf_lower_model.rds")
var_imp_baseline <-readRDS("data/var_imp_baseline.rds")
var_imp_lower <- readRDS("data/var_imp_lower.rds")
# Extracting OOB estimates form RF with complete data to later compute RMSE and BIAS
oobBaseline <- reference_results$Overall_OOB[reference_results$Model == "Baseline (Complete Data)"]
oob_baseline_male <- reference_results$Male_OOB[reference_results$Model == "Baseline (Complete Data)"]
oob_baseline_female <- reference_results$Female_OOB[reference_results$Model == "Baseline (Complete Data)"]
####
#### Aggregating results from simulation ####
####
# Overall means for oob_all (include omit)
aggregate_oob_all <- aggregate(oob_all ~ misP + hand, data = results, mean, na.rm = TRUE)
# Overall means for oob_missing and oob_complete (exclude omit)
aggregate_missing_complete <- aggregate(cbind(oob_missing, oob_complete) ~ misP + hand,
data = results, mean, na.rm = TRUE)
# Overall means for oob_male and oob_female (include omit)
aggregate_gender <- aggregate(cbind(oob_male, oob_female) ~ misP + hand,
data = results, mean, na.rm = TRUE)
# Merge the results
aggregate_results <- merge(aggregate_oob_all, aggregate_missing_complete, by = c("misP", "hand"), all = TRUE)
aggregate_results <- merge(aggregate_results, aggregate_gender, by = c("misP", "hand"), all = TRUE)
# Same as above for standard deviations
aggregate_sd_oob_all <- aggregate(oob_all ~ misP + hand, data = results, sd, na.rm = TRUE)
aggregate_sd_missing_complete <- aggregate(cbind(oob_missing, oob_complete) ~ misP + hand,
data = results, sd, na.rm = TRUE)
aggregate_sd_gender <- aggregate(cbind(oob_male, oob_female) ~ misP + hand,
data = results, sd, na.rm = TRUE)
aggregate_sd <- merge(aggregate_sd_oob_all, aggregate_sd_missing_complete, by = c("misP", "hand"), all = TRUE)
aggregate_sd <- merge(aggregate_sd, aggregate_sd_gender, by = c("misP", "hand"), all = TRUE)
# Computing and aggregating RMSE
aggregate_rmse_oob_all <- aggregate(oob_all ~ misP + hand, data = results,
function(x) sqrt(mean((x - oobBaseline)^2, na.rm = TRUE)))
aggregate_rmse_missing_complete <- aggregate(cbind(oob_missing, oob_complete) ~ misP + hand, data = results,
function(x) sqrt(mean((x - oobBaseline)^2, na.rm = TRUE)))
aggregate_rmse_gender <- aggregate(cbind(oob_male, oob_female) ~ misP + hand, data = results,
function(x) sqrt(mean((x - oobBaseline)^2, na.rm = TRUE)))
aggregate_rmse <- merge(aggregate_rmse_oob_all, aggregate_rmse_missing_complete, by = c("misP", "hand"), all = TRUE)
aggregate_rmse <- merge(aggregate_rmse, aggregate_rmse_gender, by = c("misP", "hand"), all = TRUE)
# Computing and aggregrating BIAS
aggregate_bias_oob_all <- aggregate(oob_all ~ misP + hand, data = results,
function(x) mean(x - oobBaseline, na.rm = TRUE))
aggregate_bias_missing_complete <- aggregate(cbind(oob_missing, oob_complete) ~ misP + hand, data = results,
function(x) mean(x - oobBaseline, na.rm = TRUE))
aggregate_bias_gender <- aggregate(cbind(oob_male, oob_female) ~ misP + hand, data = results,
function(x) mean(x - oobBaseline, na.rm = TRUE))
aggregate_bias <- merge(aggregate_bias_oob_all, aggregate_bias_missing_complete, by = c("misP", "hand"), all = TRUE)
aggregate_bias <- merge(aggregate_bias, aggregate_bias_gender, by = c("misP", "hand"), all = TRUE)
# Print the results
print(rf_baseline$confusion)
print(var_imp_baseline)
print(rf_lower$confusion)
print(var_imp_lower)
print(reference_results)
print(aggregate_results)
print(aggregate_sd)
print(aggregate_rmse)
print(aggregate_bias)
# Saving them for visualization later
saveRDS(list(
aggregate_results = aggregate_results,
aggregate_sd = aggregate_sd,
aggregate_rmse = aggregate_rmse,
aggregate_bias = aggregate_bias
), "results_analysis/aggregated_results.rds")
####
#### Analysis of Rank Stability Across Replications ####
####
# Extract rank columns
rank_cols <- grep("^rank_", names(results), value = TRUE)
rank_data <- results[, c("misP", "hand", "rep", rank_cols)]
# Calculate variance in ranks ACROSS REPLICATIONS for each method and missingness level
# This should show how consistent/stable the variable rankings are when we repeat the experiment
rank_var_by_method <- aggregate(. ~ misP + hand,
data = rank_data[, !names(rank_data) %in% "rep"],
FUN = var)
# Rename columns (for clarity) and print results
colnames(rank_var_by_method) <- gsub("rank_", "var_rank_", colnames(rank_var_by_method))
cat("Variance in Variable Importance Ranks Across Replications:\n")
print(rank_var_by_method)
# Calculate the average rank variance across all variables for each method
# Higher values --> less stable variable importance rankings
rank_var_by_method$avg_variance <- rowMeans(rank_var_by_method[, grep("var_rank_", names(rank_var_by_method))])
# Reshape to compare methods directly (one row per missing proportion)
rank_var_wide <- reshape(rank_var_by_method,
idvar = "misP",
timevar = "hand",
direction = "wide")
cat("\nComparison of Average Rank Variance Across Methods:\n")
print(rank_var_wide[, c("misP", "avg_variance.omit", "avg_variance.roughfix", "avg_variance.rfimpute")])
